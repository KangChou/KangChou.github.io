{"meta":{"title":"ovo$^{mc^2}$","subtitle":"作者:zhoukang","description":"互联网人工智能技术开发者$$世间万物 e^{ i \\pi}+1=0 互联互通$$\n邮箱:kangsinx@yeah.net     微信公众号(AI科技与算法编程):kangsinx","author":"KangChou","url":"https://www.coomatrix.com"},"pages":[{"title":"AI技术与场景应用","date":"2022-11-20T08:05:14.327Z","updated":"2022-11-20T08:05:14.327Z","comments":true,"path":"AI/index.html","permalink":"https://www.coomatrix.com/AI/index.html","excerpt":"","keywords":null,"text":"AI人体姿态估计——关键点检测","raw":null,"content":null},{"title":"文章分类","date":"2020-04-07T13:33:34.000Z","updated":"2022-04-16T03:00:14.331Z","comments":true,"path":"categories/index.html","permalink":"https://www.coomatrix.com/categories/index.html","excerpt":"","keywords":null,"text":"电脑PC端文章分类请看博客页面右下角⇨ 手机端请直接去“归档”里查看","raw":null,"content":null},{"title":"关于博客与作者","date":"2020-04-05T04:14:54.000Z","updated":"2022-11-20T07:34:54.485Z","comments":true,"path":"about/index.html","permalink":"https://www.coomatrix.com/about/index.html","excerpt":"","keywords":null,"text":"我是一名数学专业硕士的人工智能算法开发者(KangChou)😀，主要从事工作领域:计算机科学与人工智能算法方向 。 本博客致力于分享人工智能算法、AI算法模型与设计、Python基础知识、数据分析、TensorFlow和神经网络等学习资料，探讨互联网前沿技术和相关技术研发等。 有诗才有远方文章征稿：&#107;&#x61;&#x6e;&#x67;&#115;&#x69;&#110;&#x78;&#x40;&#121;&#x65;&#x61;&#x68;&#x2e;&#110;&#101;&#116; 点击回到博客主页：“博客主页”","raw":null,"content":null},{"title":"评论区留言","date":"2022-11-20T08:11:08.634Z","updated":"2022-11-20T08:11:08.634Z","comments":true,"path":"guestbook/index.html","permalink":"https://www.coomatrix.com/guestbook/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"拾光","date":"2022-11-20T11:34:08.210Z","updated":"2022-11-20T11:34:08.210Z","comments":true,"path":"photography/index.html","permalink":"https://www.coomatrix.com/photography/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null},{"title":"标签","date":"2020-04-05T15:26:06.000Z","updated":"2022-04-15T15:19:36.743Z","comments":true,"path":"tags/index.html","permalink":"https://www.coomatrix.com/tags/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null}],"posts":[{"title":"人工智能科技与文献网","slug":"ai1","date":"2022-11-20T12:57:06.000Z","updated":"2022-11-20T13:52:53.139Z","comments":true,"path":"2022/11/20/ai1/","link":"","permalink":"https://www.coomatrix.com/2022/11/20/ai1/","excerpt":"","keywords":null,"text":"AI新闻网：https://www.marktechpost.com/ 算法核心基础与AI模型设计【我的CSDN技术博客】：https://blog.csdn.net/weixin_41194129/category_11362509.html AI算法学习社区: https://github.com/Algorithm-learning-community-for-python YOLO系列资料汇总：https://github.com/KangChou/Cver4s NVIDIA-CUDA编程:https://github.com/KangChou/deepcv_project_demo/tree/main/CUDA%E7%BC%96%E7%A8%8B 自动驾驶点云技术: https://github.com/KangChou/deepcv_project_demo/tree/main/CVPR/point-cloud 计算机视觉技术： https://github.com/KangChou/deepcv_project_demo/tree/main/CVPR/visual 专业的聊天机器人: https://github.com/salesforce/Converse 基于开源GPT2.0的初代创作型人工智能 | 可扩展、可进化:https://github.com/EssayKillerBrain/EssayKiller_V2 高质量中文预训练模型集合:https://github.com/CLUEbenchmark/CLUEPretrainedModels 自然语言基础模型:https://github.com/lpty/nlp_base BERT模型从训练到部署全流程:https://github.com/xmxoxo/BERT-train2deploy 中文BERT-wwm系列模型:https://github.com/ymcui/Chinese-BERT-wwm 深度学习入门教程, 优秀文章: https://github.com/Mikoto10032/DeepLearning 3D视觉、VSLAM、计算机视觉的干货资料: https://github.com/qxiaofan/awesome_3d_slam_resources 自动驾驶系统实现:https://github.com/sunmiaozju/smartcar 身份证自动识别,银行卡识别,驾驶证识别,行驶证识别：https://github.com/wenchaosong/OCR_identify MVision 机器视觉 机器视觉：https://github.com/Ewenwan/MVision Computer Vision: Algorithms and Applications：https://szeliski.org/Book/ 自动驾驶的激光雷达点云处理: https://github.com/beedotkiran/Lidar_For_AD_references 动态语义SLAM 目标检测+VSLAM+光流&#x2F;多视角几何动态物体检测+octomap地图+目标数据库:https://github.com/Ewenwan/ORB_SLAM2_SSD_Semantic 基于视频的目标检测算法研究:https://github.com/guanfuchen/video_obj TensorRT-7 Network: https://github.com/Syencil/tensorRT C++ TensorRT-CenterNet: https://github.com/CaoWGG/TensorRT-CenterNet yolox-deepsort:https://github.com/Sharpiless/yolox-deepsort BirdNet+：LiDAR 鸟瞰图中的端到端 3D 对象检测:https://github.com/AlejandroBarrera/birdnet2 关于nuScenes 数据集的开发套件:https://github.com/nutonomy/nuscenes-devkit A robust LiDAR Odometry and Mapping (LOAM) package for Livox-LiDAR:https://github.com/hku-mars/loam_livox 激光雷达论文：https://arxiv.org/search/?query=+LiDAR&amp;searchtype=all&amp;source=header 使用CUDA PCL 加速Jetson的点云处理：https://developer.nvidia.com/zh-cn/blog/cuda-pcl-1-0-jetson/ PCT: Point Cloud Transformer: https://github.com/MenghaoGuo/PCT","raw":null,"content":null,"categories":[{"name":"人工智能","slug":"人工智能","permalink":"https://www.coomatrix.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"}],"tags":[{"name":"人工智能","slug":"人工智能","permalink":"https://www.coomatrix.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"}]},{"title":"新版OpenCV5 （C++）版本目标检测：YOLOv4打包成可用AI软件（离线或者上线使用）","slug":"yolocv5","date":"2022-09-20T12:57:06.000Z","updated":"2022-11-20T13:56:17.080Z","comments":true,"path":"2022/09/20/yolocv5/","link":"","permalink":"https://www.coomatrix.com/2022/09/20/yolocv5/","excerpt":"","keywords":null,"text":"上一篇文章:1、C++版本的OpenCV 5.x编译生成opencv-python&#x3D;&#x3D;5.x(GPU版本)接口并进行调用2、【强力推荐】基于Nvidia-Docker-Linux(Ubuntu18.04)平台：新版OpenCV5.x(C++)联合CUDA11.1(GPU)完美配置视觉算法开发环境3、AI模型C++部署:【配置OpenCV4++环境】与【三种在 C++ 中部署 TensorFlow 模型的方式】【准备阶段】4、yolov4视频目标检测：使用C++版本联合CUDA11.2的OpenCV 5.x编译生成opencv-python&#x3D;&#x3D;5.x进行推理 需要软件请在平论区留言，源码会开源，持续关注本博客。 1、打包成linux软件，后续增加QT功能 2、软件增加了加密功能，后续会开源代码，敬请期待 3、增加计算使用剩余天数 4、增加等等功能组件…不说了，后面会一一展示.. 本YOLO目标检测软件只在ubuntu18.04平台使用工程目录： 可执行文件为：sudo .&#x2F;main.sh其他就是yolo的配置文件和模型了： 使用方法测试图片存放位置,格式只要是jpg,随便往里仍： 保存的结果在result文件目录下： 直接将软件在拿走在UBUNTU18使用即可：sudo .&#x2F;main.sh 视频操作教程: https://live.csdn.net/v/239286?spm=1001.2014.3001.5501","raw":null,"content":null,"categories":[{"name":"AI目标检测算法","slug":"AI目标检测算法","permalink":"https://www.coomatrix.com/categories/AI%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"目标检测","slug":"目标检测","permalink":"https://www.coomatrix.com/tags/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"}]},{"title":"开源书籍与源码","slug":"books","date":"2021-04-05T14:57:06.000Z","updated":"2022-04-16T14:19:30.262Z","comments":true,"path":"2021/04/05/books/","link":"","permalink":"https://www.coomatrix.com/2021/04/05/books/","excerpt":"书籍下载链接：https://github.com/KangChou/AI-Technology-and-Algorithm-Programming","keywords":null,"text":"书籍下载链接：https://github.com/KangChou/AI-Technology-and-Algorithm-Programming 数学分析上下册 python自动化操作 python从入门让到实践 数字信号处理 《智能问答与深度学习》 https://github.com/l11x0m7/book-of-qna-code 人工智能实践：Tensorflow笔记 https://github.com/jlff/tf2_notes 源码下载链接：https://pan.baidu.com/s/19XC28Hz_TwnSQeuVifg1UQ 提取码：mocm 数据科学&#x2F;人工智能比赛解决方案聚合:https://github.com/apachecn/awesome-data-comp-solution 《学习学习与计算机视觉》配套代码: https://github.com/frombeijingwithlove/dlcv_for_beginners 《算法导论》的C++实现”代码：https://github.com/huaxz1986/cplusplus-_Implementation_Of_Introduction_to_Algorithms http://www.huaxiaozhuan.com/ 《Unix 环境高级编程第三版》笔记：https://github.com/huaxz1986/APUE_notes 算法工程师(人工智能cv方向)面试问题及相关资料的网站收集:https://github.com/lcylmhlcy/Awesome-algorithm-interview","raw":null,"content":null,"categories":[{"name":"人工智能","slug":"人工智能","permalink":"https://www.coomatrix.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"}],"tags":[{"name":"核心算法","slug":"核心算法","permalink":"https://www.coomatrix.com/tags/%E6%A0%B8%E5%BF%83%E7%AE%97%E6%B3%95/"}]},{"title":"NLP技术汇总","slug":"nlp","date":"2021-04-05T14:57:06.000Z","updated":"2022-04-16T14:27:18.937Z","comments":true,"path":"2021/04/05/nlp/","link":"","permalink":"https://www.coomatrix.com/2021/04/05/nlp/","excerpt":"Deep learning speech learning library","keywords":null,"text":"Deep learning speech learning library 一个轻量级、简单易用的 RNN 唤醒词监听器: https://github.com/MycroftAI/mycroft-precise zh:http://fancyerii.github.io/books/mycroft-precise/ 基于树莓派的人工智能小车，实现识别、提示、智能旅游线路、离线图像:https://github.com/dalinzhangzdl/AI_Car_Raspberry-pi 中文NLP数据集:https://github.com/CLUEbenchmark/CLUEDatasetSearch 模型：https://github.com/CLUEbenchmark/CLUE 中文 NLP 资源精选列表 中文自然语言处理相关资料:https://github.com/crownpku/Awesome-Chinese-NLP 视觉聊天机器人:https://paperswithcode.com/paper/visual-dialog Bert&#x2F;Transformer模型压缩与优化加速: https://blog.csdn.net/nature553863/article/details/120292394： 可以压缩 BERT 的所有方式：http://mitchgordon.me/machine/learning/2019/11/18/all-the-ways-to-compress-BERT.htmlhttps://www.leiphone.com/category/academic/MkV1j604LvPt1wcx.html BERT轻量化探索—模型剪枝（BERT Pruning）—Rasa维度剪枝:https://blog.csdn.net/ai_1046067944/article/details/103609152 压缩 BERT 以加快预测速度:https://rasa.com/blog/compressing-bert-for-faster-prediction-2/ 论文综述与BERT相关最新论文:https://github.com/tomohideshibata/BERT-related-papers 中文自然语言排行榜及论文查询:https://www.cluebenchmarks.com/index.html 计算语言学国际会议论文集:https://aclanthology.org/volumes/2020.coling-main/ 计算语言学协会第 58 届年会论文集:https://aclanthology.org/volumes/2020.acl-main/ 计算语言学2协会2021年会论文搜集：https://aclanthology.org/events/acl-2021/ 中文BERT全词掩蔽预训练（中文BERT-wwm系列模型）https://github.com/ymcui/Chinese-BERT-wwm 一个大规模的中文跨领域面向任务的对话数据集:https://github.com/thu-coai/CrossWOZ 关于ConvLab-2：用于构建、评估和诊断对话系统的开源工具包（支持中文）：https://github.com/thu-coai/ConvLab-2 视觉和语言预训练模型 (VL-PTM) 的最新进展(语音视觉融合):https://github.com/yuewang-cuhk/awesome-vision-language-pretraining-papers 深度学习和自然语言处理阅读清单:https://github.com/IsaacChanghau/DL-NLP-Readings 视觉问答 (VQA)（图像&#x2F;视频问答）、视觉问题生成、视觉对话、视觉常识推理和相关领域的精选列表：https://github.com/jokieleung/awesome-visual-question-answering","raw":null,"content":null,"categories":[{"name":"人工智能","slug":"人工智能","permalink":"https://www.coomatrix.com/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"}],"tags":[{"name":"核心算法","slug":"核心算法","permalink":"https://www.coomatrix.com/tags/%E6%A0%B8%E5%BF%83%E7%AE%97%E6%B3%95/"}]},{"title":"值得你阅读的Hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！","slug":"blog","date":"2020-04-05T14:57:06.000Z","updated":"2022-04-16T14:44:47.494Z","comments":true,"path":"2020/04/05/blog/","link":"","permalink":"https://www.coomatrix.com/2020/04/05/blog/","excerpt":"本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页 值得你阅读的Hexo个人博客搭建 Hexo快速搭建个人博客（2019&#x2F;10&#x2F;22更新） 使用到的工具 （本教程统一在Windows系统下搭建） Node.js、Hexo、Git、Github账号、Sublime Text3 请自行注册一个Github账号 最后的部署到网上的博客展示 文章目录： 前言 值得你知道的话 一、从创建到部署博客 二、博客的网页主题 三、更换域名+博客测试成功","keywords":null,"text":"本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页 值得你阅读的Hexo个人博客搭建 Hexo快速搭建个人博客（2019&#x2F;10&#x2F;22更新） 使用到的工具 （本教程统一在Windows系统下搭建） Node.js、Hexo、Git、Github账号、Sublime Text3 请自行注册一个Github账号 最后的部署到网上的博客展示 文章目录： 前言 值得你知道的话 一、从创建到部署博客 二、博客的网页主题 三、更换域名+博客测试成功 前言今天一直在钻研这个博客，并搜索了大量有关hexo搭建博客的教程进行学习。我作为一个第一次使用Hexo搭建个人博客的菜鸟，我发现我踩了不少坑，哈哈，在这里我不得不吐槽一下某些撰写Hexo搭建个人博客的技术人员，用一个字来形容他们的博客就是“乱”，乱是因为我读完他们的博客写的内容发现逻辑顺序简直看得我一头雾水、细节内容对于他们来说就是一个摆设，难怪有好多人看不懂也是应该的。当然，可能是我的水平不够，也或许是在拜读他们的大作时候不够认真和严谨。 但我还是要告诫一下一些技术编辑者： 如果是怕别人偷学你的内容，那就不要发在网上；如果你发在网上，请考虑我们读者的感受，要对自己花费那么多时间撰写的内容负责，要让别人看懂你的文章，让别人欣赏你的作品。其实，有时候还能看出一个人的品性。 吐槽到此结束~下面开始进入博客搭建环节 值得你知道到话： 是的，你没有看错！ 不用服务器，不用注册域名，不用花钱，不用敲大代码等等 一个博客就值得你拥有 一、从创建到部署博客**1、安装好Node.js 别忘了用命令npm检验Node.js安装是否完成， 关于hexo的安装教程比较简单，网上有很多完整的教程，在这里就不再赘述。**** 安装Hexo 命令： npm install -g hexo-cli补充:安装hexo-helper-live2d 看门动画插件 npm install –save hexo-helper-live2d \\ 123456一定要在你博客目录的指定路径下（E:\\hexo\\KangChou）执行，否则在node_modules之中安装不了npm uninstall hexo-helper-live2d npm install --save hexo-helper-live2dnpm install live2d-widget-model-hibiki npm install npm install --save live2d-widget-model-xxx来安装你喜欢的模型参考：https://zhuanlan.zhihu.com/p/349278862 参考文献: 123456789101112https://blog.csdn.net/qq_36239569/article/details/104104894https://zhuanlan.zhihu.com/p/350654582 解决办法：首先npm config set proxy null 代理置为空运行npm cache clean --force清理缓存然后尝试执行npm config set registry http://registry.npmjs.org/如果嫌安装依赖慢的话 可以使用国内淘宝镜像npm config set registry https://registry.npm.taobao.org 国内镜像下载就是快： 做完了这一步之后，恭喜你，前期的准备工作已经完成，环境这一步结束了。 2、安装好Git 3、在C盘下创建hexo文件夹 4、打开Hexo文件夹下，右键点击Git bash 下执行命令 工程文件目录： 再使用一次这个命令：npm install hexo-cli -g在终端使用npm安装hexo 创建博客KangChou：hexo init KangChou cd KangChou npm install 5、命令hexo server启动github服务器 6、浏览博客 安照5中提示的网址http://localhost:4000/ 复制该网址在浏览器中打开，如下图所示：这样一个博客的架子就出来了。 7、部署前哨（一）：添加Github仓库地址 在部署之前，我们需要先知道博客的部署地址，它需要对应 GitHub 的一个 Repository 的地址，这个信息需要我们来配置一下。(这里我就省略了，自己去布置)，这是我的这个Github仓库 https://github.com/KangChou/KangChou.github.io.git 打开文件Hexo下的KangChou文件根目录下的 _config.yml 文件，我使用编辑器Sublime Text3打开的（或者你使用其他代码编辑器打开，千万别用文本编辑器打开），找到 Deployment 这个地方(提示：文件最后)，把刚才新建的 Repository 的地址贴过来 8、部署前哨（二）：****部署插件 需要安装一个支持 Git 的部署插件： hexo-deployer-git，有了它我们才可以顺利将其部署到 GitHub 上面(如果不安装的话，在执行部署命令时会报错). 9、下面开始部署到Github 如果8的插件部署没有问题就开始进行部署，首先输入部署命令如下：hexo deploy 结尾…. 可以发现出现了上面的报错提示： 1Error: Spawn failed 解决方法第一次： 经搜索大量资料发现了下面的这个博客出现类似上述的一样问题，看了这个解决办法，我就斗胆试一试： https://blog.csdn.net/njc_sec/article/details/89021083 可惜我再重新安装上述的三个命令输入之后还是出先一样的错误。 解决方法第二次： 因此我怀疑可能是仓库的地址出错，因此去看看了看地址 这是原来的地址： 1deploy: 我按照出现错误提示中的网址去打开它： https://hexo.io/docs/troubleshooting.html 并找到了部署到Github目前的语法规定的网页下 https://hexo.io/docs/github-pages 按照上面对部署仓库的地址，我将上述的Deploy的源码修改为 1deploy: 于是我再试了上述的三个命令： hexo clean hexo g hexo d 最终出现下面的结果:说明出现的问题解决了 由于我起初没有部署仓库的密钥，所以要去仓库部署。 10、创建的 ssh 密钥的密码 (1)、我打开了我得仓库，并找到了设置 （2）查看部署密钥指南以了解更多信息 https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys 找到了设置密码的步骤（经过翻译以后，目前我们进行到下面的5） （3）怎么创建SSH密钥? 步骤： 找到本地环境：C:\\Users\\admin.ssh 这个路径下的用户&#x2F;名称&#x2F;.ssh 在这路径下，打开gitbub的命令控制台 (I): git init &#x2F;&#x2F;初始化一下，看看路径对不对 (II):ssh-keygen -t rsa -C “你的邮箱” 到本地环境.ssh路径下查看，是否生成id_rsa,id_rsa.pub这个两个文件 生成后，现在把id_rsa.pub里面的内容复制到githubd 的add github key 的key里面（也就是刚刚仓库的密钥添加的地方） 点击Add SSH key获得下面结果 注意：第一次提交，配置密钥，需要输入github的密码，如下就是添加秘钥成功 密钥配置成功后，要验证一下是否配置成功 命令：ssh -T &#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#x6d; 出现下面提示，说明配置成功。 Hi KangChou&#x2F;KangChou.github.io! You’ve successfully authenticated, but GitHub does not provide shell access 11、再次使用密钥部署 仍然使用命令： hexo clean hexo g hexo d 如果都没有问题就会出现下面的结果，输入你刚刚设置的名和SSH的密码 但是这里又出错了 追根溯源，我怀疑还是部署的仓库出现了问题：因此我再次打开，并做了修改 命令hexo d执行又出错 下面终于找到了答案。这里要特别感谢**@李典金 @崔庆才两位网络开发大佬的细节**点拨才通过了上面的一个小环节，从而我力挽狂澜，一气呵成，搭建了后面的所有框架。 备注：ssh-keygen -t rsa -C “&#x6b;&#97;&#x6e;&#103;&#x63;&#104;&#111;&#x75;&#54;&#54;&#x36;&#64;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;“不用输入密码，回车就可以生成。如果需要严密一点，可以进行加密功能的部署。 12、终于部署成功 最后终于找到了错误的原因，这是因为我创建的仓库下Github的SSH错误 因此，我去仓库找到了 将红色的部分复制到hexo文件目录下也就是你的博客文件末尾，打开修改如下 再次输入命令hexo d执行以后出现下面的结果， 出现Deploy done :git说明已经部署成功 这时候我们访问一下 GitHub Repository 同名的链接， 比如我的 KangChou 博客的 Repository 名称取的是 KangChou.github.io， 那我就访问 http://KangChou.github.io 这时候我们就可以看到跟本地一模一样的博客内容了。 （此时你用手机同样可以打开该网站） 二、博客的网页主题**主题的设置包括中文页面、整个页面的样式、页面风格等等， 目前 Hexo 里面应用最多的主题基本就是 Next 主题， 这个主题还是挺好看的，并且它支持的一些插件和功能都极为丰富， 配置了这个主题，我们的博客可以支持更多的扩展功能，比如阅览进度条、中英文空格排版、图片懒加载等等。 13、下载主题 打开我的电脑创建的Hexo文件夹下的KangChou目录， 单击右键Git bush输入下面的命令，执行结果如下： git clone https://github.com/theme-next/hexo-theme-next themes&#x2F;next 将下载后的themes主题替换原文件landscape中里所有的文件，并输入启动服务器命令 hexo server 执行结果如下 备注：使用数学公式需要安装这个工具：npm install hexo-math 14、配置中文环境 在博客kangchou目录下打开_config.yml修改语言为中文汉语zh-Hans 执行的结果如下 由于这只是部分为中文，而我的目的是大部分是中文的， 为了方便还要在网页上手动添加更多中文描述 15、配置中文菜单栏 打开C:\\Hexo\\KangChou\\themes\\landscape\\languages 发有三种汉语:简体中文、香港繁体、台湾繁体 然后点开zh-Hans.yml其中的配置项就是已经翻译的文本 网站会根据你站点配置``yml中的语言配置来去读取对应的语言文件 打开你languages``皮肤配置``yml你会看到菜单栏基础配置： 发现home和archives菜单是开启的， 现在我们全部开****启，只需要去掉前面的#，刷新浏览器 尝试修改站点配置yml语言，重启服务后刷新浏览器 显然结果很成功，****下面关闭git,将结果上传到Github页面： 重新打开输入部署的三个命令： hexo clean hexo g hexo d 结果和上面一样，此时就可以访问了. 访问网站****https://kangchou.github.io/ 实际上文章到这里就已经结束博客的搭建了，至于其他的 比如上传文章、上传图片，添加logo等这些我这里就不说了， hexo官网以及其他网站都能搜索到具体的教程， 想继续完善博客网站部署的朋友可以去搜索相关文献学习。 三、更换域名**相信所有做互联网开发的科技工作者都知道，如果拥有属于自己的网站一定得看起来很专业、很官方、很大气。因此，有些科技工作者就想更换自己网站的域名，让自己的域名看起来官方标准。也还有另一个原因，因为Github毕竟是外国网站，国内用户访问相对较慢，因此，如果有国内的域名作为辅助会事半功倍。事实上，我个人觉得只要可以搭建网站，即便是不换域名也没什么区别。不过，既然我给大家写这个教程，我还是有必要说一下，毕竟有很多人还是愿意换域名的。如果不想花钱买域名的，这一小节可以跳过。******16、购买域名+注册阿里网+实名认证*自行注册，如果你是在校大学生，包括硕士、博士购买域名都是有学生价优惠的，但是一定要使用自己在学校注册的电子邮箱，因为阿里云官网数据库可以识别你的学生信息的学年期限。此外，注册以后一定要进行学生认证、实名认证。 然后去买域名，域名的形式有很多，按照自己的需求进行设置域名名称和域名后缀。（实名认证最快是两天的时间）https://www.aliyun.com/* 17、在阿里云添加域名解析 cmd+ping你的http://github.io域名，得到一个IP 修改你的域名解析记录 添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”， 这样通过https://coomatrix.com/就能访问到你的博客了 18、填写绑定的域名在你的本地文件下也就是hexo—&gt;你的博客（我的是KangChou）本地目录下找到 文件夹source ，并在该文件目录下面新建一个文件CNAME文件，那么一定要注意创建的CNAME文件没有任何扩展名（切记） 再一次使用部署三命令hexo cleanhexo ghexo d****完成以后，进入Github设置，找到 Custom domain添加域名后保存即可 19、刷新网页+更改域名成功 如果上面的17没有出错的话，那么你填完域名保存以后会出现下面的结果 那么就是更改域名成功了，此时你只需要点击上图的域名就可以访问啦。 ……到此完成了本博客的搭建…… 投稿—&gt;展示你的才华 请发邮件到 &#x6b;&#x61;&#110;&#103;&#x73;&#x69;&#x6e;&#120;&#64;&#121;&#101;&#x61;&#x68;&#46;&#x6e;&#101;&#116; 标题注明【投稿】 告诉我们 你是谁，从哪来，投什么 我们会及时回复你","raw":null,"content":null,"categories":[{"name":"教程学习","slug":"教程学习","permalink":"https://www.coomatrix.com/categories/%E6%95%99%E7%A8%8B%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://www.coomatrix.com/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"学术论文排版工具LaTeX","slug":"latex","date":"2018-04-05T12:57:06.000Z","updated":"2022-11-20T13:22:23.279Z","comments":true,"path":"2018/04/05/latex/","link":"","permalink":"https://www.coomatrix.com/2018/04/05/latex/","excerpt":"","keywords":null,"text":"1、latex安装方法官方的地址是http:&#x2F;&#x2F;mirror.ctan.org&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F;texlive2021.iso，但是可能速度较慢，以下是一些国内的镜像地址：国内的镜像地址： 清华大学：https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;CTAN&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F;texlive2021.iso； 北京交通大学：https:&#x2F;&#x2F;mirror.bjtu.edu.cn&#x2F;ctan&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F;texlive2021.iso； 上海交通大学：https:&#x2F;&#x2F;mirrors.sjtug.sjtu.edu.cn&#x2F;ctan&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F;texlive2021.iso； 中国科技大学：https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;CTAN&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F;texlive2021.iso； 重庆大学：https:&#x2F;&#x2F;mirrors.cqu.edu.cn&#x2F;CTAN&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F;texlive2021.iso； 腾讯云：https:&#x2F;&#x2F;mirrors.cloud.tencent.com&#x2F;CTAN&#x2F;systems&#x2F;texlive&#x2F;Images&#x2F;texlive2021.iso 下载与安装参考地址1：https://mirror-hk.koddos.net/CTAN/systems/texlive/Images/ 下载与安装参考地址2：https://www.jianshu.com/p/a8d46d00b833 推荐迅雷下载较快： 在线LaTeX编辑器：https://www.overleaf.comTeX Live下载：https://www.tug.org/texlive/acquire-iso.htmlMikTeX下载：https://miktex.org/downloadLaTeX 公式编辑器：https://latex.codecogs.com/eqneditor/editor.phpLaTeX介绍：https://github.com/CTeX-org/lshort-zh-cn 安装步骤：我安装在D盘 步骤1：选择iso文件鼠标右键点击装载 步骤2：选择安装路径 步骤3：确定安装路径之后点击安装 2、学习网站https://www.latexstudio.net/ https://www.jianshu.com/nb/34744106","raw":null,"content":null,"categories":[{"name":"LaTeX","slug":"LaTeX","permalink":"https://www.coomatrix.com/categories/LaTeX/"}],"tags":[{"name":"排版工具","slug":"排版工具","permalink":"https://www.coomatrix.com/tags/%E6%8E%92%E7%89%88%E5%B7%A5%E5%85%B7/"}]}]}